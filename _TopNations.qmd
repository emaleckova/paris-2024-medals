## COL: National team sizes

```{r}
#| label: prepare-team-sizes

team_sizes <- athletes_dat |> 
  group_by(country_long, country, country_code) |> 
  summarize(n_participants = n())
```

```{r}
#| label: plot-team-sizes

# Prepare world map (credits: https://r-graph-gallery.com/web-dorling-cartogram-with-R.html)
world <- ne_countries(scale = 110, type = "countries", returnclass = "sf") |> 
  # Convert WGS84 to projected crs (here Robinson)
  st_transform(world_ne, crs="ESRI:54030")

# Merge with teams sizes
map_teams <- world |> 
  left_join(team_sizes, by = c("name_long" = "country")) |> 
  drop_na(n_participants)

### PLOT
dorl <- cartogram_dorling(
  map_teams, weight = "n_participants",
  k = 5, m_weight = 1, itermax = 1000
  )

ggplot() + 
  geom_sf(
    dorl, mapping = aes(geometry = geometry),
    fill = alpha("dimgrey",0.75), color = alpha("white",0.2)
    )
```


## COL: Nations by medals (table)

```{r}
#| label: country-codes

#country_codes <- read.delim("data/countries_codes_and_coordinates.csv", header = T, sep = ",")
# remove unwanted spaces
#country_codes$Alpha.2.code <- gsub(" ", "", country_codes$Alpha.2.code)
```

```{r}
#| label: helper-countries-with-flags

# I want to avoid NAs for countries which do not have a flag (provided by `fmt_flag()`)
# Therefore, a vector of 2-letter country codes included in `fmt_flag()` is needed

# store the gt temporarily
tmp <- info_flags()
# extract country codes
ccodes <- tmp[["_data"]][["country_code_2"]]
# delete the gt
remove(tmp)
```


```{r}
#| label: table-nations-ranking

# Try two column combinations to merge per-country medal counts with two-letter country codes
# This increases the number of countries covered
tab_nations <- nations_dat |> 
  left_join(select(world, iso_a2, iso_a3, name_long), by = c("country_code" = "iso_a3"))

tab_nations <- tab_nations |> 
  left_join(select(world, iso_a2, name_long), by = c("country_long" = "name_long"), suffix = c("", "_alt"))

# Use coalesce to fill in missing values from the second join
tab_nations <- tab_nations |> 
  mutate(
    iso_a2 = coalesce(iso_a2, iso_a2_alt)
  ) |> 
  select(-iso_a2_alt)

tab_nations <- tab_nations |> 
  # a handful however still require a manual fix
  mutate(iso_a2 = case_when(
    country_code == "IRI" ~ "IR",
    country_code == "TPE" ~ "TW", # this is Taiwan - are they indeed synonyms?
    country_code == "HKG" ~ "HK",
    country_code == "DMA" ~ "DO", # Dominica = DOminican Republic?
    country == "France" ~ "FR",
    country == "Norway" ~ "NO",
    country == "Kosovo" ~ NA, # (KV returns "invalid")
    TRUE ~ iso_a2
  ))

tab_nations |> 
# ranking is only present as a column index (row name)
  mutate(ranking = rownames(nations_dat),
        flag = ifelse(iso_a2 %in% ccodes, iso_a2, NA)) |> 
  select(ranking, flag, iso_a2, country_code, country_long, contains("Medal"), Total) |> 
  gt() |> 
  # add country flags
  fmt_flag(columns = iso_a2) |> 
  # this way, `NA` is not shown if country's flag is missing
  text_transform(
    locations = cells_body(columns = iso_a2),
    fn = function(x) {
      ifelse(is.na(x), "", x)
    }
  ) |> 
  cols_hide(columns = "flag") |> 
  # "string" column names
  cols_label(ranking = "Ranking", iso_a2 = " ", country_code = "Country \n code", country_long = "Country",
             # replace medals colour by icons
             `Gold.Medal` = html(as.character(icon_style(fontawesome("medal"), scale = 1.75, fill = col_medals["Gold"]))),
             `Silver.Medal` = html(as.character(icon_style(fontawesome("medal"), scale = 1.75, fill = col_medals["Silver"]))),
             `Bronze.Medal` = html(as.character(icon_style(fontawesome("medal"), scale = 1.75, fill = col_medals["Bronze"])))) |> 
  # general table formating
  gt::tab_options(column_labels.font.weight = "bold",
                  column_labels.padding.horizontal = px(10),
                  table.background.color = "transparent",
                  table.font.color = "grey50",
                  table.font.color.light = "black",
                  table.width = pct(100)) |> 
  cols_align(align = "center", columns = !contains("Country")) |> 
  # add interactivity
  opt_interactive(
    use_pagination = T, use_page_size_select = T, page_size_default = 10,
    use_sorting = T,
    use_search = T,
  )
```

